---
# #####################################################################
# Create a Jenkins instance
# #####################################################################
- name: Generate DNS Name for Jenkins
  set_fact:
    service_dns_name: "http://jenkins-{{ jumphost_ip | regex_replace('\\.', '-') }}.{{ jumphost_tld }}"

- name: Generate DNS Name for Cluster Registry
  set_fact:
    registry_dns_name: "https://registry-{{ jumphost_ip | regex_replace('\\.', '-') }}.{{ jumphost_tld }}"

# agent:
#   image: "10.0.2.221:30017/jenkins-jnlp-slave-docker"
#   imagePullSecretName: "registry-auth"

# Plugins short names: updates.jenkins-ci.org/download/plugins
- name: Create Jenkins Overrides File
  copy:
    dest: /home/ubuntu/overrides-jenkins.yml
    mode: 0640
    owner: ubuntu
    content: |
      master:
        image: {{ jenkins_image }}
        tag: {{ jenkins_tag }}
        adminUser: {{ jenkins_username }}
        adminPassword: {{ jenkins_password }}
        resources:
          limits:
            cpu: {{ limits_cpu }}
            memory: {{ limits_memory }}
        jenkinsUrl: {{ service_dns_name }}
        serviceType: {{ service_type }}
        nodePort: {{ service_port }}
        installPlugins:
          - kubernetes
          - workflow-job
          - workflow-aggregator
          - credentials-binding
          - git
          - configuration-as-code
          - kubernetes-cd
          - blueocean
          - locale
          - python
          - deepsecurity-smartcheck
        # installPlugins:
        #   - kubernetes:1.27.5
        #   - workflow-job:2.40
        #   - workflow-aggregator:2.6
        #   - credentials-binding:1.24
        #   - git:4.4.5
        #   - configuration-as-code:1.46
        #   - kubernetes-cd:2.3.1
        #   - blueocean:1.24.3
        #   - locale:1.4
        #   - python:1.3
        #   - deepsecurity-smartcheck:1.1.3
        scriptApproval:
          - "new groovy.json.JsonBuilder java.lang.Object"
          - "method groovy.lang.GroovyObject invokeMethod java.lang.String java.lang.Object"
          - "method hudson.plugins.git.GitSCM getUserRemoteConfigs"
          - "method hudson.plugins.git.UserRemoteConfig getUrl"
      agent:
        image: "mawinkler/jenkins-jnlp-slave-docker"
        # image: "10.0.2.221:30017/jenkins-jnlp-slave-docker"
        # imagePullSecretName: "registry-auth"
        customJenkinsLabels:
          - jenkins-jenkins-slave
        podName: "jenkins-jnlp-slave-docker"
        idleMinutes: 10
        tag: "latest"
        envVars:
          - name: DSSC_REGISTRY
            value: {{ inventory_hostname }}:{{ smartcheck_registry }}
          - name: DSSC_SERVICE
            value: {{ inventory_hostname }}:{{ smartcheck_nodeport }}
          - name: K8S_REGISTRY
            value: {{ inventory_hostname }}:{{ registry_nodeport }}
          - name: APPSEC_KEY
            value: {{ application_security_key }}
          - name: APPSEC_SECRET
            value: {{ application_security_secret }}
        resources:
          limits:
            cpu: {{ agent_limits_cpu }}
            memory: {{ agent_limits_memory }}
        volumes:
          - type: HostPath
            hostPath: /var/run/docker.sock
            mountPath: /var/run/docker.sock
      persistence:
        StorageClass: {{ persistence_storageClassName }}
        size: {{ persistence_size }}
      rbac:
        create: {{ rbac_create }}

  # yamlTemplate: |-
  #   apiVersion: v1
  #   kind: Pod
  #   spec:
  #     containers:
  #     - args:
  #       securityContext:
  #         privileged: true
  #         runAsGroup: 999
  #         runAsUser: 1000
- name: Create Jenkins Namespace
  become: true
  become_user: ubuntu
  shell: kubectl create namespace {{ jenkins_namespace }} --dry-run=true -o yaml | kubectl apply -f -
  args:
    chdir: $HOME

- name: Install Jenkins
  become: true
  become_user: ubuntu
  shell: helm install --namespace {{ jenkins_namespace }} --values overrides-jenkins.yml {{ jenkins_name }} {{ jenkins_chart }} >> jenkins.log
  args:
    chdir: $HOME
    creates: jenkins.log
    
# - name: Install Jenkins
#   become: true
#   become_user: ubuntu
#   shell: helm install --namespace {{ jenkins_namespace }} --values overrides-jenkins.yml {{ jenkins_name }} {{ jenkins_chart }} --version {{ jenkins_chart_version }} >> jenkins.log
#   args:
#     chdir: $HOME
#     creates: jenkins.log

- name: Fetch jenkins.log
  become: true
  become_user: ubuntu
  fetch:
    src: /home/ubuntu/jenkins.log
    dest: ./site_{{ type }}/
    flat: yes

- name: Store Jenkins credentials
  become: true
  become_user: ubuntu
  copy:
    dest: /home/ubuntu/jenkins.txt
    mode: 0640
    content: |
      URL: http://{{ inventory_hostname }}:{{ jenkins_nodeport }}
      URL: {{ service_dns_name }}
      Username: {{ jenkins_username }}
      Password: {{ jenkins_password }}

- name: Fetch jenkins.txt
  become: true
  become_user: ubuntu
  fetch:
    src: /home/ubuntu/jenkins.txt
    dest: ./site_{{ type }}/
    flat: yes
